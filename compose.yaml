services:
  postgres:
    build: 
      context: ./docker
      dockerfile: Dockerfile
      args:
        POSTGRES_VERSION: ${POSTGRES_VERSION:-17-alpine}
        SSL_COUNTRY: ${SSL_COUNTRY:-FR}
        SSL_STATE: ${SSL_STATE:-IDF}
        SSL_LOCALITY: ${SSL_LOCALITY:-Paris}
        SSL_ORGANIZATION: ${SSL_ORGANIZATION:-Company}
        SSL_COMMON_NAME: ${SSL_COMMON_NAME:-localhost}
        SSL_CERT_DAYS: ${SSL_CERT_DAYS:-365}
        SSL_KEY_BITS: ${SSL_KEY_BITS:-2048}
    environment:
      # Main PostgreSQL Configuration
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-StrongP@ssw0rd2024!}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_MULTIPLE_DATABASES: ${POSTGRES_MULTIPLE_DATABASES:-db1:user1,db2:user2,db3:user3}
      PGDATA: ${PGDATA:-/var/lib/postgresql/data/pgdata}
      
      # Security Settings
      POSTGRES_INITDB_ARGS: ${POSTGRES_INITDB_ARGS:---auth-host=scram-sha-256 --auth-local=peer}
      POSTGRES_PASSWORD_ENCRYPTION: ${POSTGRES_PASSWORD_ENCRYPTION:-scram-sha-256}
      
      # SSL Configuration
      SSL_CERT_DIR: ${SSL_CERT_DIR:-/var/lib/postgresql/ssl}
      SSL_CERT_FILE: ${SSL_CERT_FILE:-/var/lib/postgresql/ssl/server.crt}
      SSL_KEY_FILE: ${SSL_KEY_FILE:-/var/lib/postgresql/ssl/server.key}
      
      # Directory Configuration
      DOCKER_ENTRYPOINT_DIR: ${DOCKER_ENTRYPOINT_DIR:-/docker-entrypoint-initdb.d}
      POSTGRESQL_RUN_DIR: ${POSTGRESQL_RUN_DIR:-/var/run/postgresql}
      POSTGRESQL_DATA_DIR: ${POSTGRESQL_DATA_DIR:-/var/lib/postgresql/data}
      POSTGRESQL_SSL_DIR: ${POSTGRESQL_SSL_DIR:-/var/lib/postgresql/ssl}
      
      # File Permissions
      SSL_KEY_MODE: ${SSL_KEY_MODE:-600}
      SSL_CERT_MODE: ${SSL_CERT_MODE:-644}
      PGDATA_DIR_MODE: ${PGDATA_DIR_MODE:-700}
      ENTRYPOINT_SCRIPT_MODE: ${ENTRYPOINT_SCRIPT_MODE:-700}
    
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - type: volume
        source: ${POSTGRES_VOLUME_NAME:-postgres_data}
        target: /var/lib/postgresql/data
      - type: bind
        source: ./docker/pg_hba.conf
        target: /docker-entrypoint-initdb.d/pg_hba.conf
        read_only: true
      # Add new volume for SSL certificate
      - type: bind
        source: ./certs
        target: /var/lib/postgresql/ssl
    shm_size: ${POSTGRES_SHM_SIZE:-256mb}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -h localhost"]
      interval: ${HEALTHCHECK_INTERVAL:-10s}
      timeout: ${HEALTHCHECK_TIMEOUT:-5s}
      retries: ${HEALTHCHECK_RETRIES:-5}
      start_period: ${HEALTHCHECK_START_PERIOD:-30s}
    restart: unless-stopped
    command: 
      - "postgres"
      - "-c"
      - "config_file=/var/lib/postgresql/data/pgdata/postgresql.conf"
      - "-c"
      - "ssl=on"
      - "-c"
      - "ssl_cert_file=${SSL_CERT_FILE:-/var/lib/postgresql/ssl/server.crt}"
      - "-c"
      - "ssl_key_file=${SSL_KEY_FILE:-/var/lib/postgresql/ssl/server.key}"
      - "-c"
      - "password_encryption=${POSTGRES_PASSWORD_ENCRYPTION:-scram-sha-256}"

volumes:
  postgres_data:
    driver: local
